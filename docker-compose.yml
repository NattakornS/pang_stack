version: "3"

services:
  web:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./strapi-nginx.conf:/etc/nginx/sites-available/strapi.conf:ro
    networks:
      - pang-stack-network
    # command: [nginx-debug, '-g', 'daemon off;']
  pang_cms:
    image: strapi/strapi
    container_name: pang_cms
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SSL: 'false'
    #    links:
    #      - mongo:mongo
    networks:
      - pang-stack-network
    volumes:
      - ./cms:/srv/app
      - ./model:/srv/model
    ports:
      - "1337:1337"
    depends_on:
      - mysql
  ml_api:
    build:
      context: ./ml-api
      dockerfile: local.Dockerfile
    ports:
      - 5000:5000
    expose:
      - 5000
    networks:
      - pang-stack-network
    entrypoint:
      - sh
      - docker-entrypoint.sh
    volumes:
      - ./ml-api:/api
      - ./shared:/shared
    restart: always 

  mysql:
    container_name: mysql
    image: mysql
    env_file: .env
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./data:/var/lib/mysql
    networks:
      - pang-stack-network
    ports: 
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_INITDB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${MYSQL_INITDB_ROOT_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_INITDB_ROOT_PASSWORD}
  # mongo_db:
  #   image: mongo
  #   container_name: mongo_db
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
  #   networks:
  #     - pang-stack-network
  #   volumes:
  #     - mongo_data:/data/db
  #   ports:
  #     - "27017:27017"

networks:
  pang-stack-network:
    driver: bridge

volumes:
  mongo_data: